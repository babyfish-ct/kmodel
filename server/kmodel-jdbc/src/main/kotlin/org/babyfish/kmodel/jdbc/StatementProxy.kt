package org.babyfish.kmodel.jdbc

import java.lang.UnsupportedOperationException
import java.sql.Connection
import java.sql.Statement

open class StatementProxy internal constructor(
        internal val proxyCon: ConnectionProxy,
        internal open val target: Statement
): Statement by target {

    private val batchSqls = mutableListOf<String>()

    internal val targetCon: Connection
        get() = proxyCon.target

    override fun execute(sql: String): Boolean =
        proxyCon.executionContext.execute(sql, this)

    override fun execute(
        sql: String,
        autoGeneratedKeys: Int
    ): Boolean {
        throw UnsupportedOperationException()
    }

    override fun execute(
        sql: String,
        columnIndexes: IntArray?
    ): Boolean {
        throw UnsupportedOperationException()
    }

    override fun execute(
        sql: String,
        columnNames: Array<out String>?
    ): Boolean {
        throw UnsupportedOperationException()
    }

    override fun executeUpdate(sql: String): Int =
        if (execute(sql)) {
            -1
        } else {
            proxyCon.executionContext.getUpdateCount()
        }

    override fun executeUpdate(
        sql: String,
        autoGeneratedKeys: Int
    ): Int {
        throw UnsupportedOperationException()
    }

    override fun executeUpdate(
        sql: String,
        columnIndexes: IntArray?
    ): Int {
        throw UnsupportedOperationException()
    }

    override fun executeUpdate(
        sql: String,
        columnNames: Array<out String>?
    ): Int {
        throw UnsupportedOperationException()
    }

    override fun executeLargeUpdate(sql: String): Long {
        throw UnsupportedOperationException()
    }

    override fun executeLargeUpdate(
        sql: String,
        autoGeneratedKeys: Int
    ): Long {
        throw UnsupportedOperationException()
    }

    override fun executeLargeUpdate(
        sql: String,
        columnIndexes: IntArray?
    ): Long {
        throw UnsupportedOperationException()
    }

    override fun executeLargeUpdate(
        sql: String,
        columnNames: Array<out String>?
    ): Long {
        throw UnsupportedOperationException()
    }

    override fun addBatch(sql: String) {
        batchSqls += sql
        target.addBatch(sql)
    }

    override fun clearBatch() {
        batchSqls.clear()
        target.clearBatch()
    }

    override fun executeBatch(): IntArray {
        batchSqls.forEach {
            intercept(it)
        }
        batchSqls.clear()
        return target.executeBatch()
    }

    override fun executeLargeBatch(): LongArray {
        batchSqls.forEach {
            intercept(it)
        }
        batchSqls.clear()
        return target.executeLargeBatch()
    }

    private fun intercept(sql: String) {

    }
}