package org.babyfish.kmodel.jdbc

import org.babyfish.kmodel.jdbc.exec.Batch
import java.lang.UnsupportedOperationException
import java.sql.Connection
import java.sql.Statement

open class StatementProxy internal constructor(
    private val proxyCon: ConnectionProxy,
    internal open val target: Statement
): Statement by target {

    internal val batches = mutableListOf<Batch>()

    override fun getConnection(): ConnectionProxy =
        proxyCon

    internal val targetCon: Connection
        get() = proxyCon.target

    override fun execute(sql: String): Boolean =
        proxyCon.executionContext.execute(
            sql,
            null,
            this
        )

    override fun execute(
        sql: String,
        autoGeneratedKeys: Int
    ): Boolean {
        throw UnsupportedOperationException()
    }

    override fun execute(
        sql: String,
        columnIndexes: IntArray?
    ): Boolean {
        throw UnsupportedOperationException()
    }

    override fun execute(
        sql: String,
        columnNames: Array<out String>?
    ): Boolean {
        throw UnsupportedOperationException()
    }

    override fun executeUpdate(sql: String): Int =
        if (execute(sql)) {
            -1
        } else {
            proxyCon.executionContext.getUpdateCount()
        }

    override fun executeUpdate(
        sql: String,
        autoGeneratedKeys: Int
    ): Int {
        throw UnsupportedOperationException()
    }

    override fun executeUpdate(
        sql: String,
        columnIndexes: IntArray?
    ): Int {
        throw UnsupportedOperationException()
    }

    override fun executeUpdate(
        sql: String,
        columnNames: Array<out String>?
    ): Int {
        throw UnsupportedOperationException()
    }

    override fun executeLargeUpdate(sql: String): Long {
        throw UnsupportedOperationException()
    }

    override fun executeLargeUpdate(
        sql: String,
        autoGeneratedKeys: Int
    ): Long {
        throw UnsupportedOperationException()
    }

    override fun executeLargeUpdate(
        sql: String,
        columnIndexes: IntArray?
    ): Long {
        throw UnsupportedOperationException()
    }

    override fun executeLargeUpdate(
        sql: String,
        columnNames: Array<out String>?
    ): Long {
        throw UnsupportedOperationException()
    }

    override fun addBatch(sql: String) {
        batches += Batch(sql)
    }

    override fun clearBatch() {
        batches.clear()
    }

    override fun executeBatch(): IntArray =
        proxyCon
            .executionContext
            .execute(batches, this)
            .also {
                batches.clear()
            }

    override fun executeLargeBatch(): LongArray {
        throw UnsupportedOperationException()
    }
}